# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: minio/minio
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  expose:
    - "9000"
    - "9001"
  env_file:
    - .env/minio.env
  healthcheck:
    test: [ "CMD", "mc", "ready", "local" ]
    interval: 5s
    timeout: 5s
    retries: 5

services:
  pg_hangfire:
    image: postgres:17
    container_name: pg_hangfire
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env/pd_hangfire.env
    networks:
      - postgres
    volumes:
      - pg_hangfire-storage:/var/lib/postgresql/data/

  pg_master:
    image: postgres:17
    container_name: pg_master
    restart: always
    ports:
      - "5435:5435"
    env_file:
      - .env/pg_master.env
    networks:
      - postgres
    volumes:
      - pg_master-storage:/var/lib/postgresql/data/

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4:8
    restart: always
    env_file:
      - .env/pg_admin.env
    ports:
      - "8009:80"
    networks:
      - postgres
    volumes:
      - pgadmin-storage:/var/lib/pgadmin
  
  
  
  # starts 4 docker containers running minio server instances.
  # using nginx reverse proxy, load balancing, you can access
  # it through port 9000.
  
  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2

  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - data3-1:/data1
      - data3-2:/data2

  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - data4-1:/data1
      - data4-2:/data2

  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4


networks:
  postgres:
    driver: bridge

#  grafana:
#    image: grafana/grafana
#    container_name: grafana
#    restart: unless-stopped
#    env_file:
#      - ..env/.env_grafana
#    ports:
#      - '3000:3000'
#    volumes:
#      - grafana-storage:/var/lib/grafana


volumes:
  pg_hangfire-storage:
  pg_master-storage:
  pgadmin-storage:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:
#  grafana-storage: